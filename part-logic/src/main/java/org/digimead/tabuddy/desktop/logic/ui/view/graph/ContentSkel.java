/**
 * This file is part of the TA Buddy project.
 * Copyright (c) 2014 Alexey Aksenov ezh@ezh.msk.ru
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Global License version 3
 * as published by the Free Software Foundation with the addition of the
 * following permission added to Section 15 as permitted in Section 7(a):
 * FOR ANY PART OF THE COVERED WORK IN WHICH THE COPYRIGHT IS OWNED
 * BY Limited Liability Company «MEZHGALAKTICHESKIJ TORGOVYJ ALIANS»,
 * Limited Liability Company «MEZHGALAKTICHESKIJ TORGOVYJ ALIANS» DISCLAIMS
 * THE WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Global License for more details.
 * You should have received a copy of the GNU Affero General Global License
 * along with this program; if not, see http://www.gnu.org/licenses or write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA, 02110-1301 USA, or download the license from the following URL:
 * http://www.gnu.org/licenses/agpl.html
 *
 * The interactive user interfaces in modified source and object code versions
 * of this program must display Appropriate Legal Notices, as required under
 * Section 5 of the GNU Affero General Global License.
 *
 * In accordance with Section 7(b) of the GNU Affero General Global License,
 * you must retain the producer line in every report, form or document
 * that is created or manipulated using TA Buddy.
 *
 * You can be released from the requirements of the license by purchasing
 * a commercial license. Buying such a license is mandatory as soon as you
 * develop commercial activities involving the TA Buddy software without
 * disclosing the source code of your own applications.
 * These activities include: offering paid services to customers,
 * serving files in a web or/and network application,
 * shipping TA Buddy with a closed source product.
 *
 * For more information, please contact Digimead Team at this
 * address: ezh@ezh.msk.ru
 */

package org.digimead.tabuddy.desktop.logic.ui.view.graph;

import org.eclipse.jface.viewers.TableViewer;
import org.eclipse.jface.viewers.TableViewerColumn;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.DisposeEvent;
import org.eclipse.swt.events.DisposeListener;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableColumn;
import org.eclipse.ui.forms.widgets.ColumnLayout;
import org.eclipse.ui.forms.widgets.Form;
import org.eclipse.ui.forms.widgets.FormToolkit;
import org.eclipse.ui.forms.widgets.Section;

/**
 * This file is autogenerated by Google WindowBuilder Pro
 *
 * @author ezh
 */
public class ContentSkel extends Composite {

	private final FormToolkit toolkit = new FormToolkit(Display.getCurrent());
	private final Form form;
	private Table tableAvailable;
	private Button btnCloseGroup;
	private Button btnCloseAll;
	private Button btnOpenNew;
	private Table tableActive;
	private TableViewer tableViewerActive;
	private TableViewer tableViewerAvailable;
	private TableViewerColumn tableViewerColumnActiveNames;
	private TableViewerColumn tableViewerColumnActiveCount;
	private TableViewerColumn tableViewerColumnAvailableName;
	private TableViewerColumn tableViewerColumnAvailableCount;

	/**
	 * Create the composite.
	 *
	 * @param parent
	 * @param style
	 */
	public ContentSkel(Composite parent, int style) {
		super(parent, style);
		addDisposeListener(new DisposeListener() {
			public void widgetDisposed(DisposeEvent e) {
				toolkit.dispose();
			}
		});
		toolkit.adapt(this);
		toolkit.paintBordersFor(this);
		setLayout(new FillLayout(SWT.HORIZONTAL));
		form = toolkit.createForm(this);
		form.setText("Hello, Eclipse Forms");
		toolkit.decorateFormHeading(form);
		form.getBody().setLayout(new ColumnLayout());

		Section sctnActiveViews = toolkit.createSection(form.getBody(), Section.DESCRIPTION | Section.TWISTIE | Section.TITLE_BAR);
		sctnActiveViews.setDescription("hhhh");
		toolkit.paintBordersFor(sctnActiveViews);
		sctnActiveViews.setText("Active views");
		sctnActiveViews.setExpanded(true);

		Composite compositeActiveViews = new Composite(sctnActiveViews, SWT.NONE);
		toolkit.adapt(compositeActiveViews);
		toolkit.paintBordersFor(compositeActiveViews);
		sctnActiveViews.setClient(compositeActiveViews);
		GridLayout gl_compositeActiveViews = new GridLayout(2, true);
		gl_compositeActiveViews.horizontalSpacing = 0;
		gl_compositeActiveViews.marginWidth = 0;
		gl_compositeActiveViews.marginHeight = 0;
		compositeActiveViews.setLayout(gl_compositeActiveViews);

		tableViewerActive = new TableViewer(compositeActiveViews, SWT.FULL_SELECTION);
		tableActive = tableViewerActive.getTable();
		tableActive.setLinesVisible(true);
		tableActive.setHeaderVisible(true);
		tableActive.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 2, 1));
		toolkit.adapt(tableActive, false, false);
		toolkit.paintBordersFor(tableActive);

		tableViewerColumnActiveNames = new TableViewerColumn(tableViewerActive, SWT.NONE);
		TableColumn tblclmnActiveNames = tableViewerColumnActiveNames.getColumn();
		tblclmnActiveNames.setWidth(100);
		tblclmnActiveNames.setText("Name");

		tableViewerColumnActiveCount = new TableViewerColumn(tableViewerActive, SWT.NONE);
		TableColumn tblclmnActiveCount = tableViewerColumnActiveCount.getColumn();
		tblclmnActiveCount.setWidth(100);
		tblclmnActiveCount.setText("Count");

		btnCloseGroup = toolkit.createButton(compositeActiveViews, "Close group", SWT.NONE);
		btnCloseGroup.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1));

		btnCloseAll = toolkit.createButton(compositeActiveViews, "Close all", SWT.NONE);

		Section sctnAvailableViews = toolkit.createSection(form.getBody(), Section.DESCRIPTION | Section.TWISTIE | Section.TITLE_BAR);
		sctnAvailableViews.setDescription("eieuiuei");
		toolkit.paintBordersFor(sctnAvailableViews);
		sctnAvailableViews.setText("Available views");
		sctnAvailableViews.setExpanded(true);

		Composite compositeAvailableViews = new Composite(sctnAvailableViews, SWT.NONE);
		toolkit.adapt(compositeAvailableViews);
		toolkit.paintBordersFor(compositeAvailableViews);
		sctnAvailableViews.setClient(compositeAvailableViews);
		GridLayout gl_compositeAvailableViews = new GridLayout();
		gl_compositeAvailableViews.horizontalSpacing = 0;
		gl_compositeAvailableViews.marginWidth = 0;
		gl_compositeAvailableViews.marginHeight = 0;
		compositeAvailableViews.setLayout(gl_compositeAvailableViews);

		tableViewerAvailable = new TableViewer(compositeAvailableViews, SWT.FULL_SELECTION);
		tableAvailable = tableViewerAvailable.getTable();
		tableAvailable.setLinesVisible(true);
		tableAvailable.setHeaderVisible(true);
		tableAvailable.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 2, 1));
		toolkit.adapt(tableAvailable, false, false);
		toolkit.paintBordersFor(tableAvailable);

		tableViewerColumnAvailableName = new TableViewerColumn(tableViewerAvailable, SWT.NONE);
		TableColumn tblclmnAvailableName = tableViewerColumnAvailableName.getColumn();
		tblclmnAvailableName.setWidth(100);
		tblclmnAvailableName.setText("Name");

		tableViewerColumnAvailableCount = new TableViewerColumn(tableViewerAvailable, SWT.NONE);
		TableColumn tblclmnAvailableCount = tableViewerColumnAvailableCount.getColumn();
		tblclmnAvailableCount.setWidth(100);
		tblclmnAvailableCount.setText("Count");

		btnOpenNew = toolkit.createButton(compositeAvailableViews, "Open new", SWT.NONE);
		btnOpenNew.setLayoutData(new GridData(SWT.CENTER, SWT.CENTER, false, false, 1, 1));

	}

	protected Form getForm() {
		return form;
	}

	protected Button getBtnCloseGroup() {
		return btnCloseGroup;
	}

	protected Button getBtnCloseAll() {
		return btnCloseAll;
	}

	protected Button getBtnOpenNew() {
		return btnOpenNew;
	}

	protected TableViewer getTableViewerActive() {
		return tableViewerActive;
	}

	protected TableViewerColumn getTableViewerColumnActiveNames() {
		return tableViewerColumnActiveNames;
	}

	protected TableViewerColumn getTableViewerColumnActiveCount() {
		return tableViewerColumnActiveCount;
	}

	protected TableViewer getTableViewerAvailable() {
		return tableViewerAvailable;
	}

	protected TableViewerColumn getTableViewerColumnAvailableName() {
		return tableViewerColumnAvailableName;
	}

	protected TableViewerColumn getTableViewerColumnAvailableCount() {
		return tableViewerColumnAvailableCount;
	}
}
