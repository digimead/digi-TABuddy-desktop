/**
 * This file is part of the TABuddy project.
 * Copyright (c) 2012-2013 Alexey Aksenov ezh@ezh.msk.ru
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Global License version 3
 * as published by the Free Software Foundation with the addition of the
 * following permission added to Section 15 as permitted in Section 7(a):
 * FOR ANY PART OF THE COVERED WORK IN WHICH THE COPYRIGHT IS OWNED
 * BY Limited Liability Company «MEZHGALAKTICHESKIJ TORGOVYJ ALIANS»,
 * Limited Liability Company «MEZHGALAKTICHESKIJ TORGOVYJ ALIANS» DISCLAIMS
 * THE WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Global License for more details.
 * You should have received a copy of the GNU Affero General Global License
 * along with this program; if not, see http://www.gnu.org/licenses or write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA, 02110-1301 USA, or download the license from the following URL:
 * http://www.gnu.org/licenses/agpl.html
 *
 * The interactive user interfaces in modified source and object code versions
 * of this program must display Appropriate Legal Notices, as required under
 * Section 5 of the GNU Affero General Global License.
 *
 * In accordance with Section 7(b) of the GNU Affero General Global License,
 * you must retain the producer line in every report, form or document
 * that is created or manipulated using TABuddy.
 *
 * You can be released from the requirements of the license by purchasing
 * a commercial license. Buying such a license is mandatory as soon as you
 * develop commercial activities involving the TABuddy software without
 * disclosing the source code of your own applications.
 * These activities include: offering paid services to customers,
 * serving files in a web or/and network application,
 * shipping TABuddy with a closed source product.
 *
 * For more information, please contact Digimead Team at this
 * address: ezh@ezh.msk.ru
 */

package org.digimead.tabuddy.desktop.modeldef.dialog;

import org.digimead.tabuddy.desktop.Messages;
import org.eclipse.jface.dialogs.IDialogConstants;
import org.eclipse.jface.dialogs.TitleAreaDialog;
import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.ScrolledComposite;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Text;
import org.eclipse.ui.forms.widgets.FormToolkit;
import org.eclipse.ui.forms.widgets.ScrolledForm;

/**
 * This file is autogenerated by Google WindowBuilder Pro
 *
 * @author ezh
 */
public class ElementEditorSkel extends TitleAreaDialog {
	private ScrolledComposite scrolledComposite;
	private final FormToolkit toolkit = new FormToolkit(Display.getCurrent());
	private Text txtElementIdentificator;
	private ScrolledForm form;
	private Label lblElementIdentificator;

	/**
	 * Create the dialog.
	 *
	 * @param parentShell
	 */
	public ElementEditorSkel(Shell parentShell) {
		super(parentShell);
		setShellStyle(SWT.DIALOG_TRIM | SWT.RESIZE);
	}

	/**
	 * Create contents of the dialog.
	 *
	 * @param parent
	 */
	@Override
	protected Control createDialogArea(Composite parent) {
		setMessage(org.digimead.tabuddy.desktop.Messages$.MODULE$.elementEditorDescription_text());
		setTitle(org.digimead.tabuddy.desktop.Messages$.MODULE$.elementEditorTitle_text());
		Composite area = (Composite) super.createDialogArea(parent);

		form = toolkit.createScrolledForm(area);
		form.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));
		form.getBody().setLayout(new GridLayout(3, false));

		lblElementIdentificator = toolkit.createLabel(form.getBody(),
				org.digimead.tabuddy.desktop.Messages$.MODULE$.identificator_text(), SWT.NONE);
		lblElementIdentificator.setAlignment(SWT.RIGHT);
		lblElementIdentificator.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, false,
				false, 2, 1));

		txtElementIdentificator = toolkit.createText(form.getBody(), "", SWT.BORDER);
		txtElementIdentificator.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true,
				false, 1, 1));

		Composite composite = toolkit.createCompositeSeparator(form.getBody());
		GridData gd_composite = new GridData(SWT.FILL, SWT.CENTER, true, false,
				3, 1);
		gd_composite.heightHint = 1;
		composite.setLayoutData(gd_composite);
		toolkit.decorateFormHeading(form.getForm());
		toolkit.paintBordersFor(composite);

		return area;
	}

	/**
	 * Create contents of the button bar.
	 *
	 * @param parent
	 */
	@Override
	protected void createButtonsForButtonBar(Composite parent) {
		Button button = createButton(parent, IDialogConstants.OK_ID,
				IDialogConstants.OK_LABEL, true);
		button.setEnabled(false);
		createButton(parent, IDialogConstants.CANCEL_ID,
				IDialogConstants.CANCEL_LABEL, false);
	}

	protected ScrolledComposite getScrolledComposite() {
		return scrolledComposite;
	}

	protected ScrolledForm getForm() {
		return form;
	}

	protected FormToolkit getToolkit() {
		return toolkit;
	}

	protected Text getTxtElementId() {
		return txtElementIdentificator;
	}

	protected Label getLblElementId() {
		return lblElementIdentificator;
	}
}
